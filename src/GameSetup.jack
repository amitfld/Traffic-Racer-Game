/**
 * Draw the game's setup
 * Everything that needs to be done before the player can start the game
 */
class GameSetup{
    field Tree1 tree1n1;
    field Tree1 tree1n2;
    field Tree1 tree1n3;
    field Tree1 tree1n4;
    field Tree1 tree1n5;
    field Tree1 tree1n6;
    field Tree2 tree2n1;
    field Tree2 tree2n2;
    field Tree2 tree2n3;
    field Tree2 tree2n4;
    field Tree2 tree2n5;
    field Tree2 tree2n6;

    constructor GameSetup new(){
        var int startAt;
        do Screen.clearScreen();
        do Screen.drawRectangle(0, 23, 511, 25); // Draw the upper line for score
        do Screen.drawRectangle(27,25,29,255); // Draw left sidewalk
        do Screen.drawRectangle(483,25,485,255);// Draw right sidewalk
        // Draw 3 lanes separators
        let startAt = 34;
        while((startAt + 10) < 256){
            do Screen.drawRectangle(133,startAt,137,startAt + 10);
            let startAt = startAt + 25;
        }
        let startAt = 34;
        while((startAt + 10) < 256){
            do Screen.drawRectangle(250,startAt,255,startAt + 10);
            let startAt = startAt + 25;
        }
        let startAt = 34;
        while((startAt + 10) < 256){
            do Screen.drawRectangle(365,startAt,369,startAt + 10);
            let startAt = startAt + 25;
        }

        // Draw right Panel Trees
        let tree1n1 = Tree1.new(0,200);
        do tree1n1.draw((80 * 32) + 31);
        let tree2n1 = Tree2.new(0,200);
        do tree2n1.draw((50*32) + 31);
        let tree1n2 = Tree1.new(0,200);
        do tree1n2.draw((110*32) + 31);
        let tree2n2 = Tree2.new(0,200);
        do tree2n2.draw((140*32) + 31);
        let tree1n3 = Tree1.new(0,200);
        do tree1n3.draw((170*32) + 31);
        let tree2n3 = Tree2.new(0,200);
        do tree2n3.draw((200*32) + 31);


        //Draw left Panel Trees
        let tree1n4 = Tree1.new(20,80);
        do tree1n4.draw((80*32));
        let tree2n4 = Tree2.new(20,50);
        do tree2n4.draw((50*32));
        let tree1n5 = Tree1.new(20,110);
        do tree1n5.draw((110*32));
        let tree2n5 = Tree2.new(20,140);
        do tree2n5.draw((140*32));
        let tree1n6 = Tree1.new(20,170);
        do tree1n6.draw((170*32));
        let tree2n6 = Tree2.new(20,200);
        do tree2n6.draw((200*32));

        // Add instructions
        do Output.moveCursor(0, 13);
        do Output.printString("Press space to start");
        do Output.moveCursor(1, 13);
        do Output.printString("Use left/right arrows to move");

        return this;
    }

    method void dispose() {
        do tree1n1.dispose();
        do tree1n2.dispose();
        do tree1n3.dispose();
        do tree1n4.dispose();
        do tree1n5.dispose();
        do tree1n6.dispose();
        do tree2n1.dispose();
        do tree2n2.dispose();
        do tree2n3.dispose();
        do tree2n4.dispose();
        do tree2n5.dispose();
        do tree2n6.dispose();
        do Memory.deAlloc(this);
        return;
	}
}