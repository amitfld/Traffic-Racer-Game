/**
* A graphical tree. Characterized by a screen location.
* Has method for drawing
*/
class Tree1 {
    field int x, y; //the tree's screen location.

    //Constructor
	constructor Tree1 new(int Ax, int Ay){
		let x = Ax;
		let y = Ay;
		return this;
	}

	method void draw(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +96, 0);
	do Memory.poke(memAddress +128, 0);
	do Memory.poke(memAddress +160, 0);
	do Memory.poke(memAddress +256, 384);
	do Memory.poke(memAddress +288, 960);
	do Memory.poke(memAddress +320, 2016);
	do Memory.poke(memAddress +352, 4080);
	do Memory.poke(memAddress +384, 8184);
	do Memory.poke(memAddress +416, 16380);
	do Memory.poke(memAddress +448, 32766);
	do Memory.poke(memAddress +480, 8184);
	do Memory.poke(memAddress +512, 32766);
	do Memory.poke(memAddress +544, -1);
	do Memory.poke(memAddress +576, 32766);
	do Memory.poke(memAddress +608, 16380);
	do Memory.poke(memAddress +640, 16380);
	do Memory.poke(memAddress +672, 4080);
	do Memory.poke(memAddress +704, 960);
	do Memory.poke(memAddress +736, 384);
	do Memory.poke(memAddress +768, 384);
	do Memory.poke(memAddress +800, 384);
	do Memory.poke(memAddress +832, 384);
	do Memory.poke(memAddress +864, 384);
	return;
	}

	method void dispose() {
		do Memory.deAlloc(this);
		return;
	}
}
